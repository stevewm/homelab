# yaml-language-server: $schema=https://taskfile.dev/schema.json
---
version: "3"

tasks:
  snapshot-all:
    desc: Snapshot all apps across all namespaces without waiting
    preconditions:
      - which kubectl
    vars:
      ALL_APPS:
        sh: |
          kubectl get replicationsources -A --no-headers -o jsonpath='{range .items[*]}{.metadata.namespace},{.metadata.name}{"\n"}{end}' | grep -v '\-r2'
      WAIT: false
    cmds:
      - for:
          var: ALL_APPS
          split: "\n"
        task: snapshot
        vars:
          WAIT: "{{ .WAIT }}"
          NS: '{{ splitList "," .ITEM | first }}'
          APP: '{{ splitList "," .ITEM | last }}'

  snapshot:
    desc: Snapshot an app [NS=default] [APP=required]
    preconditions:
      - which kubectl
      - kubectl --namespace {{ .NS }} get replicationsources {{ .APP }}
    requires:
      vars:
        - APP
    vars:
      WAIT: '{{ .WAIT | default "true" }}'
      NS: '{{ .NS | default "default" }}'
      JOB: volsync-src-{{ .APP }}
    cmds:
      - kubectl --namespace {{ .NS }} patch replicationsources {{ .APP }} --type merge -p '{"spec":{"trigger":{"manual":"{{now | unixEpoch}}"}}}'
      - |-
        {{ if eq "true" .WAIT }}until kubectl --namespace {{ .NS }} get job/{{ .JOB }} &>/dev/null; do sleep 5; done{{ end }}
      - |-
        {{ if eq "true" .WAIT }}kubectl --namespace {{ .NS }} wait job/{{ .JOB }} --for=condition=complete --timeout=120m{{ end }}

  unlock:
    desc: Unlock a restic source repo [NS=default] [APP=required] [DEST=hetzner]
    preconditions:
      - which kubectl
      - kubectl --namespace {{ .NS }} get replicationsource {{ .APP }}-backup-{{ .DEST | default "hetzner" }}
    requires:
      vars:
        - APP
    vars:
      NS: '{{ .NS | default "default" }}'
      APP: "{{ .APP }}"
    cmds:
      - kubectl --namespace {{ .NS }} patch --field-manager=flux-client-side-apply replicationsources {{ .APP }}-backup-hetzner --type merge --patch "{\"spec\":{\"restic\":{\"unlock\":\"{{now | unixEpoch}}\"}}}"
