# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app gatus
spec:
  interval: 30m
  maxHistory: 3
  chart:
    spec:
      chart: app-template
      version: 3.3.2
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      gatus:
        annotations:
          reloader.stakater.com/auto: 'true'
        initContainers:
          init-config:
            image:
              repository: ghcr.io/kiwigrid/k8s-sidecar
              tag: 1.27.5@sha256:1fc88232e223a6977c626510372a74ca1f73af073e3c361719ccf02f223c8a12
            env:
              FOLDER: /config
              LABEL: gatus.io/enabled
              NAMESPACE: ALL
              RESOURCE: both
              UNIQUE_FILENAMES: true
              METHOD: WATCH
            envFrom:
              - secretRef:
                  name: gatus
            restartPolicy: Always
            resources: &resources
              requests:
                cpu: 10m
              limits:
                memory: 256Mi
        containers:
          app:
            image:
              repository: ghcr.io/twin/gatus
              tag: v5.11.0@sha256:eb0374eb55e3ff84ec8f9ea10342ddb623cfba23e5836138896cde01f11cf23d
            env:
              GATUS_CONFIG_PATH: /config
              GATUS_DELAY_START_SECONDS: 5
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: &port 80
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop: ["ALL"]
            resources: *resources
        pod:
          dnsConfig:
            options:
              - {name: ndots, value: "1"}
          securityContext:
            runAsNonRoot: true
            runAsUser: 65534
            runAsGroup: 65534
            fsGroupChangePolicy: OnRootMismatch
          labels:
            ingress.home.arpa/nginx-external: allow
            ingress.home.arpa/homepage: allow
            monitoring.home.arpa/prometheus: allow
    service:
      app:
        controller: gatus
        ports:
          http:
            port: *port
    serviceMonitor:
      app:
        serviceName: gatus
        endpoints:
          - port: http
            scheme: http
            path: /metrics
            interval: 1m
            scrapeTimeout: 10s
    ingress:
      app:
        annotations:
          gethomepage.dev/name: *app
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: monitoring
          gethomepage.dev/icon: gatus.png
          gethomepage.dev/widget.type: gatus
          gethomepage.dev/widget.url: "http://gatus.monitoring.svc.cluster.local:80"
          external-dns.alpha.kubernetes.io/target: ext.cfg.sh
        className: nginx-external
        hosts:
          - host: ${APP_SUBDOMAIN}.${DOMAIN}
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    serviceAccount:
      create: true
      name: gatus
    persistence:
      config:
        type: emptyDir
      config-file:
        type: configMap
        name: gatus-configmap
        globalMounts:
          - path: /config/config.yaml
            subPath: config.yaml
            readOnly: true
