# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta2.json
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: grafana
spec:
  interval: 30m
  timeout: 20m
  maxHistory: 3
  chart:
    spec:
      chart: grafana
      version: 8.4.8
      sourceRef:
        kind: HelmRepository
        name: grafana
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  uninstall:
    keepHistory: false
  values:
    annotations:
      configmap.reloader.stakater.com/reload: grafana
    podLabels:
      ingress.home.arpa/nginx-internal: allow
      monitoring.home.arpa/prometheus: allow

    replicas: 1

    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: default
            disableDeletion: false
            editable: true
            folder: ""
            options:
              path: /var/lib/grafana/dashboards/default
            orgId: 1
            type: file
          - name: ceph
            orgId: 1
            folder: Ceph
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/ceph
          - name: cilium
            orgId: 1
            folder: Cilium
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/cilium
          - name: crunchy-postgres
            orgId: 1
            folder: Crunchy Postgres
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/crunchy-postgres
          - name: flux
            orgId: 1
            folder: Flux
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/flux
          - name: games
            orgId: 1
            folder: Games
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/games
          - name: kubernetes
            orgId: 1
            folder: Kubernetes
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/kubernetes
          - name: minio
            orgId: 1
            folder: MinIO
            type: file
            disableDelete: true
            editable: true
            options:
              path: /var/lib/grafana/dashboards/minio
          - name: media
            orgId: 1
            folder: Media
            type: file
            disableDelete: true
            editable: true
            options:
              path: /var/lib/grafana/dashboards/media
          - name: network
            orgId: 1
            folder: Network
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/network
          - name: nginx
            orgId: 1
            folder: Nginx
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/nginx
          - name: prometheus
            orgId: 1
            folder: Prometheus
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/prometheus
          - name: system
            orgId: 1
            folder: System
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/system


    dashboards:
      default:
        cert-manager:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/cert-manager/dashboards/cert-manager.json
          datasource: Prometheus

        external-secrets:
          url: https://raw.githubusercontent.com/external-secrets/external-secrets/main/docs/snippets/dashboard.json
          datasource: Prometheus

        dragonfly:
          url: https://raw.githubusercontent.com/dragonflydb/dragonfly-operator/main/monitoring/grafana-dashboard.json
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus

        volsync:
          # renovate: dashboardName="VolSync Dashboard"
          gnetId: 21356
          revision: 3
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus

      ceph:
        ceph-cluster:
          # renovate: dashboardName="Ceph Cluster"
          gnetId: 2842
          revision: 17
          datasource: Prometheus
        ceph-osd:
          # renovate: dashboardName="Ceph - OSD (Single)"
          gnetId: 5336
          revision: 9
          datasource: Prometheus
        ceph-pools:
          # renovate: dashboardName="Ceph - Pools"
          gnetId: 5342
          revision: 9
          datasource: Prometheus

      cilium:
        cilium:
          gnetId: 6658
          revision: 2
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus
        cilium-policy-verdicts:
          url: https://raw.githubusercontent.com/isovalent/grafana-dashboards/main/dashboards/cilium-policy-verdicts/cilium-policy-verdicts-dashboard.json
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus

      crunchy-postgres:
        crunchy-pgbackrest:
          url: https://raw.githubusercontent.com/CrunchyData/postgres-operator-examples/main/kustomize/monitoring/grafana/dashboards/pgbackrest.json
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus
        crunchy-pod-details:
          url: https://raw.githubusercontent.com/CrunchyData/postgres-operator-examples/main/kustomize/monitoring/grafana/dashboards/pod_details.json
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus
        crunchy-postgresql-details:
          url: https://raw.githubusercontent.com/CrunchyData/postgres-operator-examples/main/kustomize/monitoring/grafana/dashboards/postgresql_details.json
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus
        crunchy-postgresql-overview:
          url: https://raw.githubusercontent.com/CrunchyData/postgres-operator-examples/main/kustomize/monitoring/grafana/dashboards/postgresql_overview.json
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus
        crunchy-postgresql-service_health:
          url: https://raw.githubusercontent.com/CrunchyData/postgres-operator-examples/main/kustomize/monitoring/grafana/dashboards/postgresql_service_health.json
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus
        crunchy-prometheus-alerts:
          url: https://raw.githubusercontent.com/CrunchyData/postgres-operator-examples/main/kustomize/monitoring/grafana/dashboards/prometheus_alerts.json
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus
        crunchy-query-statistics:
          url: https://raw.githubusercontent.com/CrunchyData/postgres-operator-examples/main/kustomize/monitoring/grafana/dashboards/query_statistics.json
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus

      flux:
        flux-control-plane:
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/control-plane.json
          datasource: Prometheus
        flux-logs:
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/logs.json
          datasource: Prometheus

      games:
        minecraft:
          # renovate: dashboardName="Minecraft Fabric"
          gnetId: 14492
          revision: 2
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus

      kubernetes:
        k8s-system-api-server:
          # renovate: dashboardName="Kubernetes / System / API Server"
          gnetId: 15761
          revision: 17
          datasource: Prometheus
        k8s-views-global:
          # renovate: dashboardName="Kubernetes / Views / Global"
          gnetId: 15757
          revision: 37
          datasource: Prometheus
        k8s-views-nodes:
          # renovate: dashboardName="Kubernetes / Views / Nodes"
          gnetId: 15759
          revision: 29
          datasource: Prometheus
        k8s-views-namespaces:
          # renovate: dashboardName="Kubernetes / Views / Namespaces"
          gnetId: 15758
          revision: 35
          datasource: Prometheus
        k8s-views-pods:
          # renovate: dashboardName="Kubernetes / Views / Pods"
          gnetId: 15760
          revision: 28
          datasource: Prometheus
        k8s-volumes:
          # renovate: dashboardName="K8s / Storage / Volumes / Cluster"
          gnetId: 11454
          revision: 14
          datasource: Prometheus

      media:
        jellyfin:
          url: https://raw.githubusercontent.com/stevewm/homelab/main/kubernetes/mini/apps/media/jellyfin/app/resources/dashboard.json
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus
        media-dashboard:
          url: https://raw.githubusercontent.com/onedr0p/exportarr/master/examples/grafana/dashboard2.json
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus

      minio:
        dashboard:
          # renovate: dashboardName="MinIO Dashboard"
          gnetId: 13502
          revision: 26
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus

      network:
        cloudflared:
          # renovate: dashboardName="Cloudflare Tunnels (cloudflared)"
          gnetId: 17457
          revision: 6
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus

        external-dns:
          # renovate: dashboardName="External-DNS"
          gnetId: 15038
          revision: 3
          datasource: Prometheus

        pihole:
          # renovate: dashboardName="Pi-hole Exporter"
          gnetId: 10176
          revision: 3
          datasource: Prometheus

        speedtest-exporter:
          # renovate: dashboardName="Speedtest-Exporter Dashboard"
          gnetId: 13665
          revision: 4
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus

      nginx:
        nginx:
          url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/nginx.json
          datasource: Prometheus
        nginx-request-handling-performance:
          url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/request-handling-performance.json
          datasource: Prometheus

      prometheus:
        prometheus:
          # renovate: depName="Prometheus"
          gnetId: 19105
          revision: 3
          datasource: Prometheus

      system:
        node-exporter-full:
          # renovate: dashboardName="Node Exporter Full"
          gnetId: 1860
          revision: 37
          datasource: Prometheus

        node-feature-discovery:
          url: https://raw.githubusercontent.com/kubernetes-sigs/node-feature-discovery/master/examples/grafana-dashboard.json
          datasource: Prometheus

        smart:
          # renovate: depName="Dashboard for smartctl_exporter"
          gnetId: 20204
          revision: 1
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus

        vpa-recommendations:
          # renovate: dashboardName="VPA Recommendations"
          gnetId: 14588
          revision: 5
          datasource: Prometheus

    datasources:
      datasources.yaml:
        apiVersion: 1
        datasources:
          - access: proxy
            name: Prometheus
            type: prometheus
            uid: prometheus
            url: http://kube-prometheus-stack-prometheus.monitoring.svc.cluster.local:9090
            isDefault: true
            jsonData:
              prometheusType: Prometheus
          - name: Alertmanager
            type: alertmanager
            access: proxy
            url: http://kube-prometheus-stack-alertmanager.monitoring.svc.cluster.local:9093
            jsonData:
              implementation: prometheus

        deleteDatasources:
          - name: Prometheus
            orgId: 1
          - name: Alertmanager
            orgId: 1

      nginx:
        nginx:
          url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/nginx.json
          datasource: Prometheus
        nginx-request-handling-performance:
          url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/request-handling-performance.json
          datasource: Prometheus

    env:
      GF_ANALYTICS_CHECK_FOR_UPDATES: false
      GF_ANALYTICS_CHECK_FOR_PLUGIN_UPDATES: false
      GF_ANALYTICS_REPORTING_ENABLED: false
      GF_AUTH_ANONYMOUS_ENABLED: false
      GF_DATE_FORMATS_USE_BROWSER_LOCALE: true
      GF_EXPLORE_ENABLED: true
      GF_FEATURE_TOGGLES_ENABLE: publicDashboards
      GF_LOG_MODE: console
      GF_NEWS_NEWS_FEED_ENABLED: false
      GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS: natel-discrete-panel,pr0ps-trackmap-panel,panodata-map-panel
      GF_SECURITY_COOKIE_SAMESITE: grafana
      GF_SERVER_ROOT_URL: https://${APP_SUBDOMAIN}.${DOMAIN}
      # OAUTH
      GF_AUTH_GENERIC_OAUTH_ENABLED: 'true'
      GF_AUTH_GENERIC_OAUTH_NAME: 'Authelia'
      GF_AUTH_GENERIC_OAUTH_CLIENT_ID: 'grafana'
      GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET:
        secretKeyRef:
          name: grafana
          key: client_secret
      GF_AUTH_GENERIC_OAUTH_SCOPES: 'openid profile email groups'
      GF_AUTH_GENERIC_OAUTH_EMPTY_SCOPES: 'false'
      GF_AUTH_GENERIC_OAUTH_AUTH_URL: https://sso.${DOMAIN}/api/oidc/authorization
      GF_AUTH_GENERIC_OAUTH_TOKEN_URL: https://sso.${DOMAIN}/api/oidc/token
      GF_AUTH_GENERIC_OAUTH_API_URL: https://sso.${DOMAIN}/api/oidc/userinfo
      GF_AUTH_GENERIC_OAUTH_LOGIN_ATTRIBUTE_PATH: 'preferred_username'
      GF_AUTH_GENERIC_OAUTH_GROUPS_ATTRIBUTE_PATH: 'groups'
      GF_AUTH_GENERIC_OAUTH_NAME_ATTRIBUTE_PATH: 'name'
      GF_AUTH_GENERIC_OAUTH_USE_PKCE: 'true'
      GF_AUTH_GENERIC_OAUTH_ROLE_ATTRIBUTE_PATH: contains(groups, 'admin') && 'Admin' || contains(groups, 'editor') && 'Editor' || 'Viewer'

    imageRenderer:
      enabled: true

    ingress:
      enabled: true
      ingressClassName: nginx-internal
      hosts:
        - &host ${APP_SUBDOMAIN}.${DOMAIN}
      tls:
        - hosts:
            - *host
      annotations:
        nginx.ingress.kubernetes.io/custom-http-errors: "599"
        gethomepage.dev/name: grafana
        gethomepage.dev/enabled: 'true'
        gethomepage.dev/group: monitoring
        gethomepage.dev/icon: grafana.png

    persistence:
      enabled: false

    plugins:
      - grafana-clock-panel
      - grafana-piechart-panel
      - grafana-worldmap-panel
      - marcusolsson-treemap-panel
      - natel-discrete-panel
      - nikosc-percenttrend-panel
      - vonage-status-panel

    rbac:
      pspEnabled: false

    resources:
      limits:
        memory: 512Mi
      requests:
        cpu: 50m
        memory: 128Mi

    serviceAccount:
      create: true
      autoMount: true

    serviceMonitor:
      enabled: true

    sidecar:
      dashboards:
        enabled: true
        searchNamespace: ALL
        label: grafana_dashboard
        folderAnnotation: grafana_folder
        provider:
          disableDelete: true
          foldersFromFilesStructure: true
      datasources:
        enabled: true
        searchNamespace: ALL
        labelValue: ""

    testFramework:
      enabled: false

    topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app.kubernetes.io/name: grafana
