# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
spec:
  releaseName: kube-prometheus-stack
  interval: 30m
  maxHistory: 3
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 61.7.0
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  uninstall:
    keepHistory: false
  values:
    fullnameOverride: kps
    prometheus:
      prometheusSpec:
        resources:
          requests:
            cpu: 384m
            memory: 2Gi
          limits:
            memory: 4Gi
        podMonitorSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        ruleSelectorNilUsesHelmValues: false
      service:
        labels:
          ingress.home.arpa/nginx-internal: "true"
      ingress:
        enabled: true
        ingressClassName: nginx-internal
        hosts:
          - &prom-host prom.cfg.sh
        tls:
          - hosts:
              - *prom-host
        annotations:
          gethomepage.dev/name: prometheus
          gethomepage.dev/enabled: 'true'
          gethomepage.dev/group: '${HOMEPAGE_CATEGORY}'
          gethomepage.dev/icon: prometheus.png
    grafana:
      enabled: false
    alertmanager:
      alertmanagerSpec:
        resources:
          requests:
            cpu: 10m
            memory: 50Mi
          limits:
            memory: 100Mi
    # https://grafana.com/grafana/dashboards/14588-vpa-recommendations/
    kube-state-metrics:
      rbac:
        extraRules:
          - apiGroups: ["autoscaling.k8s.io"]
            resources: ["verticalpodautoscalers"]
            verbs: ["list", "watch"]
      prometheus:
        monitor:
          enabled: true
      # https://github.com/kubernetes/kube-state-metrics/blob/main/docs/customresourcestate-metrics.md#verticalpodautoscaler
      # https://github.com/kubernetes/kube-state-metrics/issues/2041#issuecomment-1614327806
      customResourceState:
        enabled: true
        config:
          kind: CustomResourceStateMetrics
          spec:
            resources:
              - groupVersionKind:
                  group: autoscaling.k8s.io
                  kind: "VerticalPodAutoscaler"
                  version: "v1"
                labelsFromPath:
                  verticalpodautoscaler: [metadata, name]
                  namespace: [metadata, namespace]
                  target_api_version: [apiVersion]
                  target_kind: [spec, targetRef, kind]
                  target_name: [spec, targetRef, name]
                metrics:
                  - name: "vpa_containerrecommendations_target"
                    help: "VPA container recommendations for memory."
                    each:
                      type: Gauge
                      gauge:
                        path: [status, recommendation, containerRecommendations]
                        valueFrom: [target, memory]
                        labelsFromPath:
                          container: [containerName]
                    commonLabels:
                      resource: "memory"
                      unit: "byte"
                  - name: "vpa_containerrecommendations_target"
                    help: "VPA container recommendations for cpu."
                    each:
                      type: Gauge
                      gauge:
                        path: [status, recommendation, containerRecommendations]
                        valueFrom: [target, cpu]
                        labelsFromPath:
                          container: [containerName]
                    commonLabels:
                      resource: "cpu"
                      unit: "core"
      selfMonitor:
        enabled: true
      ingress:
        enabled: true
        ingressClassName: nginx-internal
        hosts:
          - &am-host am.cfg.sh
        tls:
          - hosts:
              - *am-host
        annotations:
          gethomepage.dev/name: alertmanager
          gethomepage.dev/enabled: 'true'
          gethomepage.dev/group: '${HOMEPAGE_CATEGORY}'
          gethomepage.dev/icon: alertmanager.png
