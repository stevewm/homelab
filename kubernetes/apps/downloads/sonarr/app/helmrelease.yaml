# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app sonarr
spec:
  interval: 30m
  maxHistory: 3
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  uninstall:
    keepHistory: false
  driftDetection:
    mode: warn
  values:
    defaultPodOptions:
      automountServiceAccountToken: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 100
        fsGroup: 100
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile:
          type: RuntimeDefault

    controllers:
      sonarr:
        defaultContainerOptions:
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop: [ALL]

        annotations:
          reloader.stakater.com/auto: "true"

        containers:
          app:
            image:
              repository: ghcr.io/home-operations/sonarr
              tag: 4.0.15.2940@sha256:ca6c735014bdfb04ce043bf1323a068ab1d1228eea5bab8305ca0722df7baf78
            env:
              COMPlus_EnableDiagnostics: "0"
              SONARR__APP_INSTANCENAME: Sonarr
              SONARR__AUTH__APIKEY:
                valueFrom:
                  secretKeyRef:
                    name: sonarr
                    key: api_key
              SONARR__AUTH__METHOD: External
              SONARR__AUTH_REQUIRED: DisabledForLocalAddresses
              SONARR__LOG__DBENABLED: "False"
              SONARR__LOG__LEVEL: info
              SONARR__SERVER__PORT: &port 80
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            resources:
              requests:
                cpu: 10m
                memory: 272Mi
              limits:
                memory: 420Mi

    service:
      app:
        controller: *app
        ports:
          http:
            port: *port

    route:
      app:
        hostnames: ["snr.stevewm.dev"]
        parentRefs:
          - name: internal
            namespace: network
            sectionName: https
        annotations:
          gethomepage.dev/name: *app
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: downloads
          gethomepage.dev/icon: sonarr.png
          gethomepage.dev/widget.key: "{{ `{{HOMEPAGE_VAR_SONARR_API_KEY}}` }}"
          gethomepage.dev/widget.type: *app
          gethomepage.dev/widget.url: "http://sonarr.downloads.svc.cluster.local"

    persistence:
      media:
        type: nfs
        server: lilnas.home.arpa
        path: /volume1/Media
        globalMounts:
          - path: /data/media
      config:
        existingClaim: sonarr-config
      refresh:
        type: secret
        name: scripts
        defaultMode: 0755
        advancedMounts:
          sonarr:
            app:
              - path: /scripts/jellyfin-refresh.sh
                subPath: jellyfin-refresh.sh
                readOnly: true
