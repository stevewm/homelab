# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app jellyseerr
spec:
  interval: 30m
  maxHistory: 3
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  uninstall:
    keepHistory: false
  values:
    defaultPodOptions:
      automountServiceAccountToken: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 100
        fsGroup: 100
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile:
          type: RuntimeDefault

    controllers:
      jellyseerr:
        pod:
          labels:
            ingress.home.arpa/nginx-external: allow
            ingress.home.arpa/homepage: allow
            egress.home.arpa/kubedns: allow

        containers:
          app:
            image:
              repository: ghcr.io/fallenbagel/jellyseerr
              tag: 2.5.2@sha256:cf84b74c32d3049554ae02ac1da2e9e5affc693fe4263f859e804da77fe7f98f
            env:
              LOG_LEVEL: info
              PORT: &port 80
              HOME: /tmp
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /status
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 2Gi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop: [ALL]

    service:
      app:
        controller: *app
        ports:
          http:
            port: *port

    ingress:
      app:
        className: nginx-external
        hosts:
          - host: req.${DOMAIN}
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        annotations:
          external-dns.alpha.kubernetes.io/target: ext.${DOMAIN}
          # Fixes "Oops" app error due to custom error pages
          nginx.ingress.kubernetes.io/custom-http-errors: "599"
          gethomepage.dev/name: *app
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: media
          gethomepage.dev/icon: jellyseerr.png
          gethomepage.dev/widget.key: "{{ `{{ HOMEPAGE_VAR_JELLYSEERR_API_KEY }}` }}"
          gethomepage.dev/widget.type: jellyseerr
          gethomepage.dev/widget.url: "http://jellyseerr.media.svc.cluster.local:5055"

    persistence:
      config:
        existingClaim: jellyseerr-config
        globalMounts:
          - path: /app/config
      cache:
        type: emptyDir
      logs:
        type: emptyDir
        globalMounts:
          - path: /app/config/logs
      tmp:
        type: emptyDir
