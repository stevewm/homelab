# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/helm.toolkit.fluxcd.io/helmrelease_v2.json
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
spec:
  releaseName: kube-prometheus-stack
  interval: 30m
  maxHistory: 3
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 70.0.1
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: flux-system
  install:
    crds: Skip
    remediation:
      retries: 3
  upgrade:
    crds: Skip
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  uninstall:
    keepHistory: false
  values:
    crds:
      enabled: false
    cleanPrometheusOperatorObjectNames: true

    kubeControllerManager:
      enabled: false

    kubeEtcd:
      enabled: false

    kubelet:
      enabled: true

    kubeProxy:
      enabled: false

    kubeScheduler:
      enabled: false

    grafana:
      enabled: false

    alertmanager:
      alertmanagerSpec:
        podMetadata:
          labels:
            egress.home.arpa/kubedns: allow
            ingress.home.arpa/nginx-internal: allow
            monitoring.home.arpa/prometheus: allow
        resources:
          requests:
            cpu: 10m
            memory: 50Mi
          limits:
            memory: 100Mi
      ingress:
        enabled: true
        ingressClassName: nginx-internal
        hosts:
          - am.${DOMAIN}
        annotations:
          gethomepage.dev/name: alertmanager
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: &group monitoring
          gethomepage.dev/icon: alertmanager.png

    # https://grafana.com/grafana/dashboards/14588-vpa-recommendations/
    kube-state-metrics:
      rbac:
        extraRules:
          - apiGroups: ["autoscaling.k8s.io"]
            resources: ["verticalpodautoscalers"]
            verbs: ["list", "watch"]
      prometheus:
        monitor:
          enabled: true

    prometheus:
      selfMonitor:
        enabled: true
      prometheusSpec:
        resources:
          requests:
            cpu: 100m
            memory: 2Gi
          limits:
            memory: 4Gi
        podMonitorSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        scrapeConfigSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        ruleSelectorNilUsesHelmValues: false
        enableAdminAPI: true
        enableFeatures:
          - auto-gomaxprocs
          - memory-snapshot-on-shutdown
          - new-service-discovery-manager
        externalLabels:
          cluster: ${CLUSTER}
        podMetadata:
          labels:
            ingress.home.arpa/nginx-internal: allow
      ingress:
        enabled: true
        ingressClassName: nginx-internal
        hosts:
          - prom.${DOMAIN}
        annotations:
          gethomepage.dev/name: prometheus
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: *group
          gethomepage.dev/icon: prometheus.png
