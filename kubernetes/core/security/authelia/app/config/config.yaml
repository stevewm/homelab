# yaml-language-server: $schema=https://www.authelia.com/schemas/latest/json-schema/configuration.json
---
authentication_backend:
  password_reset:
    disable: true
  refresh_interval: 1m

  ldap:
    address: ldap://glauth.security.svc.cluster.local:389
    implementation: custom
    timeout: 5s
    start_tls: false
    base_dn: dc=home,dc=arpa
    additional_users_dn: ou=people,ou=users
    users_filter: (&({username_attribute}={input})(objectClass=posixAccount))
    additional_groups_dn: ou=users
    groups_filter: (&(uniqueMember={dn})(objectClass=posixGroup))
    user: cn=search,ou=svcaccts,ou=users,dc=home,dc=arpa
    password: '{{ secret "/config/secret/AUTHELIA_AUTHENTICATION_BACKEND_LDAP_PASSWORD" }}'
    attributes:
      username: uid
      display_name: givenName
      group_name: ou
      mail: mail
      member_of: memberOf

session:
  same_site: lax
  inactivity: 5m
  expiration: 1h
  remember_me: 1M
  secret: '{{ secret "/config/secret/AUTHELIA_REDIS_ENCRYPTION_KEY" }}'
  cookies:
    - name: authelia_session
      domain: stevewm.dev
      authelia_url: https://sso.stevewm.dev
      default_redirection_url: https://home.stevewm.dev
  redis:
    database_index: 1
    host: dragonfly.database.svc.cluster.local
    password: '{{ secret "/config/secret/DRAGONFLY_PASSWORD" }}'

storage:
  encryption_key: |
    {{ secret "/config/secret/AUTHELIA_STORAGE_ENCRYPTION_KEY" }}
  postgres:
    address: 'tcp://{{ secret "/config/db/host" }}:{{ secret "/config/db/port" }}'
    database: '{{ secret "/config/db/dbname" }}'
    username: '{{ secret "/config/db/user" }}'
    password: '{{ secret "/config/db/password" }}'
    schema: authelia

notifier:
  smtp:
    address: smtp-relay.network.svc.cluster.local:25
    sender: '{{ secret "/config/secret/SMTP_RELAY_USERNAME" }}'
    disable_require_tls: true

totp:
  disable: false
  issuer: authelia.com

webauthn:
  disable: true

duo_api:
  disable: true

access_control:
  default_policy: two_factor
  networks:
    - name: internal
      networks: ["10.0.0.0/8", "172.16.0.0/12", "192.168.0.0/16"]
  rules:
    # This just reduces logging noise in authelia
    - domain:
        - "*.stevewm.dev"
      policy: one_factor
      subject: [group:admins, group:users]
      networks:
        - internal

identity_providers:
  oidc:
    jwks:
      - key: |
          {{ secret "/config/secret/OIDC_JWKS_KEY" | mindent 10 "|" | msquote }}
    cors:
      endpoints: ["authorization", "token", "revocation", "introspection"]
      allowed_origins_from_client_redirect_uris: true

    claims_policies:
      karakeep:
        id_token: ["email"]

    clients:
      - client_name: Grafana
        client_id: grafana
        client_secret: '{{ secret "/config/secret/GRAFANA_OAUTH_CLIENT_SECRET_DIGEST" }}'
        public: false
        authorization_policy: two_factor
        require_pkce: true
        pkce_challenge_method: S256
        response_types: ["code"]
        grant_types: ["authorization_code"]
        pre_configured_consent_duration: 1y
        scopes: [openid, profile, groups, email]
        redirect_uris: ["https://graf.stevewm.dev/login/generic_oauth"]
        access_token_signed_response_alg: none
        userinfo_signed_response_alg: none
        token_endpoint_auth_method: client_secret_basic

      - client_name: Karakeep
        client_id: karakeep
        claims_policy: karakeep
        client_secret: '{{ secret "/config/secret/KARAKEEP_OAUTH_CLIENT_SECRET_DIGEST" }}'
        public: false
        require_pkce: false
        pkce_challenge_method: ""
        redirect_uris: ["https://kk.stevewm.dev/api/auth/callback/custom"]
        scopes: ["openid", "profile", "email"]
        response_types: ["code"]
        grant_types: ["authorization_code"]
        access_token_signed_response_alg: none
        userinfo_signed_response_alg: none
        token_endpoint_auth_method: client_secret_basic

      - client_name: Mealie
        client_id: mealie
        client_secret: '{{ secret "/config/secret/MEALIE_OAUTH_CLIENT_SECRET_DIGEST" }}'
        public: false
        require_pkce: true
        pkce_challenge_method: ""
        redirect_uris: ["https://eat.stevewm.dev/login"]
        scopes: ["openid", "email", "profile", "groups"]
        response_types: ["code"]
        grant_types: ["authorization_code"]
        access_token_signed_response_alg: none
        userinfo_signed_response_alg: none
        token_endpoint_auth_method: client_secret_basic

      - client_name: Actual Budget
        client_id: actual-budget
        client_secret: '{{ secret "/config/secret/ACTUAL_OAUTH_CLIENT_SECRET_DIGEST" }}'
        public: false
        require_pkce: false
        pkce_challenge_method: ""
        redirect_uris: ["https://actual.stevewm.dev/openid/callback"]
        scopes: ["openid", "profile", "groups", "email"]
        response_types: ["code"]
        grant_types: ["authorization_code"]
        access_token_signed_response_alg: none
        userinfo_signed_response_alg: none
        token_endpoint_auth_method: client_secret_basic

      - client_name: Jellyfin
        client_id: jellyfin
        client_secret: '{{ secret "/config/secret/JELLYFIN_OAUTH_CLIENT_SECRET_DIGEST" }}'
        public: false
        require_pkce: true
        pkce_challenge_method: S256
        redirect_uris: ["https://watch.stevewm.dev/sso/OID/redirect/authelia"]
        scopes: ["openid", "profile", "groups"]
        response_types: ["code"]
        grant_types: ["authorization_code"]
        access_token_signed_response_alg: none
        userinfo_signed_response_alg: none
        token_endpoint_auth_method: client_secret_post
