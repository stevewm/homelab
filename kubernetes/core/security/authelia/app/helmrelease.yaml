# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app authelia
spec:
  interval: 30m
  maxHistory: 3
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  uninstall:
    keepHistory: false
  values:
    defaultPodOptions:
      automountServiceAccountToken: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        runAsGroup: 65534
        fsGroup: 65534
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile:
          type: RuntimeDefault
      # affinity:
      #   podAntiAffinity:
      #     preferredDuringSchedulingIgnoredDuringExecution:
      #       - weight: 80
      #         podAffinityTerm:
      #           labelSelector:
      #             matchExpressions:
      #               - key: app.kubernetes.io/name
      #                 operator: In
      #                 values:
      #                   - *app
      #           topologyKey: "kubernetes.io/hostname"

    controllers:
      authelia:
        replicas: 1
        strategy: RollingUpdate

        annotations:
          reloader.stakater.com/auto: "true"

        pod:
          labels:
            auth.home.arpa/ldap: allow
            db.home.arpa/dragonfly: allow
            db.home.arpa/pg: postgres
            ingress.home.arpa/nginx-internal: allow
            egress.home.arpa/kubedns: allow
            mail.home.arpa/smtp-relay: allow
            monitoring.home.arpa/prometheus: allow
          securityContext:
            runAsUser: 65534
            runAsGroup: 65534
            runAsNonRoot: true
          topologySpreadConstraints:
            - maxSkew: 1
              topologyKey: kubernetes.io/hostname
              whenUnsatisfiable: DoNotSchedule
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: *app

        containers:
          app:
            image:
              repository: ghcr.io/authelia/authelia
              tag: 4.39.4@sha256:64b356c30fd817817a4baafb4dbc0f9f8702e46b49e1edb92ff42e19e487b517
            envFrom:
              - secretRef:
                  name: *app
              - secretRef:
                  name: authelia-db
              - secretRef:
                  name: authelia-generated
            env:
              AUTHELIA_SERVER_ADDRESS: tcp://0.0.0.0:80
              AUTHELIA_SERVER_DISABLE_HEALTHCHECK: "true"
              AUTHELIA_TELEMETRY_METRICS_ADDRESS: tcp://0.0.0.0:80
              AUTHELIA_TELEMETRY_METRICS_ENABLED: "true"
              AUTHELIA_THEME: dark
              X_AUTHELIA_CONFIG: /config/config.yaml
              X_AUTHELIA_CONFIG_FILTERS: expand-env
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/health
                    port: &port 80
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
              drop: ["ALL"]
            resources:
              requests:
                cpu: 10m
                memory: 32Mi
              limits:
                memory: 128Mi

    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
            primary: true
          metrics:
            port: 8080

    serviceMonitor:
      app:
        serviceName: *app
        endpoints:
          - port: metrics

    ingress:
      app:
        className: nginx-internal
        annotations:
          # external-dns.alpha.kubernetes.io/target: ext.stevewm.dev
          nginx.ingress.kubernetes.io/configuration-snippet: |
            add_header Cache-Control "no-store";
            add_header Pragma "no-cache";
            add_header X-Frame-Options "SAMEORIGIN";
            add_header X-XSS-Protection "1; mode=block";
        hosts:
          - host: sso.stevewm.dev
            paths:
              - path: /
                service:
                  identifier: app
                  port: http

    persistence:
      config:
        type: configMap
        name: *app
        globalMounts:
          - path: /config/config.yaml
            subPath: config.yaml
            readOnly: true
