# yaml-language-server: $schema=https://raw.githubusercontent.com/budimanjojo/talhelper/master/pkg/config/schemas/talconfig.json
---
clusterName: main
# renovate: depName=ghcr.io/siderolabs/installer datasource=docker
talosVersion: v1.9.1
# renovate: depName=ghcr.io/siderolabs/kubelet datasource=docker
kubernetesVersion: v1.32.0
endpoint: https://192.168.1.55:6443
allowSchedulingOnMasters: true
allowSchedulingOnControlPlanes: true
cniConfig:
  name: none

additionalApiServerCertSans: &san
  - 127.0.0.1 # KubePrism
  - 192.168.1.55
additionalMachineCertSans: *san

nodes:
  - hostname: control01
    ipAddress: 192.168.1.51
    controlPlane: true
    disableSearchDomain: true
    machineSpec:
      mode: metal
      arch: amd64
      secureboot: true
      useUKI: true
    installDiskSelector:
      size: "<=260GB"
      type: nvme
    networkInterfaces:
      - deviceSelector:
          busPath: "0*"
        dhcp: true
    machineFiles:
      - path: /etc/cri/conf.d/20-customization.part
        op: create
        permissions: 0
        content: |-
          [plugins."io.containerd.grpc.v1.cri"]
            enable_unprivileged_ports = true

controlPlane:
  schematic:
    customization:
      extraKernelArgs:
        - net.ifnames=1 # Enable predictable NIC naming
        - init_on_alloc=0 # Less security, more speed
        - init_on_free=0 # Less security, more speed
        - intel_iommu=on # PCI Passthrough
        - iommu=pt # PCI Passthrough
      systemExtensions:
        officialExtensions:
          - siderolabs/intel-ucode
          - siderolabs/i915
          - siderolabs/thunderbolt
          - siderolabs/uinput
          - siderolabs/mei

  patches:
    # Extra kubelet mounts (hostpath storage)
    - |-
      machine:
        kubelet:
          extraMounts:
            - destination: /var/mnt/local
              type: bind
              source: /var/mnt/local
              options:
                - bind
                - rshared
                - rw

    # Configure NFS mount options
    - |
      machine:
        files:
          - op: overwrite
            path: /etc/nfsmount.conf
            permissions: 0o644
            content: |
              [ NFSMount_Global_Options ]
              nfsvers=4.2
              hard=True
              noatime=True
              nconnect=16

    # Enable disk encryption
    - |-
      machine:
        systemDiskEncryption:
          ephemeral:
            provider: luks2
            keys:
              - slot: 0
                nodeID: {}
          state:
            provider: luks2
            keys:
              - slot: 0
                nodeID: {}
    - |-
      machine:
        install:
          wipe: true

    # Replace kubeproxy with cilium
    - |-
      cluster:
        proxy:
          disabled: true

    - |- # Kubelet configuration
      machine:
        kubelet:
          extraArgs:
            feature-gates: NewVolumeManagerReconstruction=false
            rotate-server-certificates: "true"
          extraConfig:
            maxPods: 150
    - |-
      machine:
        network:
          interfaces:
            - deviceSelector:
                busPath: "0*"
              vip:
                ip: 192.168.1.55

    # Enable MutatingAdmissionPolicy
    - |-
      cluster:
        apiServer:
          extraArgs:
            runtime-config: admissionregistration.k8s.io/v1alpha1=true
            feature-gates: MutatingAdmissionPolicy=true

    # Configure cluster
    - |-
      cluster:
        allowSchedulingOnControlPlanes: true
        coreDNS:
            disabled: true
        proxy:
          disabled: true
        scheduler:
          config:
            apiVersion: kubescheduler.config.k8s.io/v1
            kind: KubeSchedulerConfiguration
            profiles:
              - schedulerName: default-scheduler
                pluginConfig:
                  - name: PodTopologySpread
                    args:
                      defaultingType: List
                      defaultConstraints:
                        - maxSkew: 1
                          topologyKey: kubernetes.io/hostname
                          whenUnsatisfiable: ScheduleAnyway

    # Enable K8s Talos API Access
    - |-
      machine:
        features:
          kubernetesTalosAPIAccess:
            enabled: true
            allowedRoles:
              - os:admin
            allowedKubernetesNamespaces:
              - actions-runner-system
              - system-upgrade

    # Configure udev rules
    - |-
      machine:
        udev:
          rules:
            # Intel GPU
            - SUBSYSTEM=="drm", KERNEL=="renderD*", GROUP="44", MODE="0660"
